function [u,K_reg] = Regularization(K,f,RegType)
        
        if nargin == 2
            RegType = f;
            compute = false;

        elseif nargin == 3 
            lambda = sqrt(eps) * norm(K, 'fro');
            K = sparse(K);
            f = sparse(f);
            compute = true;
        else
            error('Incorrect number of inputs in Regularization function');
        end


        switch RegType
               case "off" 
                  K_reg = K;
                  f_reg = f;  
                    
               case {"penalty", "Tikhonov"}
    
                   
                   % I = eye(size(K));
                    I = speye(size(K,2));

                   if RegType == "penalty"
                      K_reg = K + lambda * I;
                      f_reg = f;
                      
                   elseif RegType == "Tikhonov"
                      K_reg = K' * K + lambda * I;
                      f_reg = K' * f;
               
                   end    
    
               otherwise
                    error('****** The regularization type is not recognized ******');    
        end
        
        if compute  
        
            % K_reg = sparse(K_reg);
            % f_reg = sparse(f_reg);

            % u = - K_reg \ f_reg ;

            tol = 1e-10;
            maxit = 500;
            [u, ~] = pcg(K_reg, f_reg, tol, maxit);
            u = -u;
        else
            u = [];
        end
       


